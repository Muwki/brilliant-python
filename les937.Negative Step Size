Negative Step Size
What do you think will happen if we run this program?   It'll draw a spiral in reverse.
from turtle import *

for i in range(100, 0, -5):
    forward(i)
    left(90)

bye()

That's correct!
Ranges in Python can also go in decreasing order, by using a negative step size.
----
So, in the example above, range(100, 0, -5) 
loops through the values 100, 95, 90, etc., drawing a spiral “in reverse”:
-------
What do you think will happen if the step size is negative,
but the start value is less than the stop value?              

from turtle import *

for i in range(0, 100, -5):
    forward(i)
    left(90)

bye()
It won't draw anything.
----
If you run the program below, 
it finishes without drawing anything. 
That's because there are simply no values in the range that was specified:
from turtle import *

for i in range(0, 100, -5):
    forward(i)
    left(90)

bye()

To use the negative step size properly, 
the start value should always be greater than the stop value.
--------
Here's a version of the flower-drawing program from
the last lesson that creates a “spiral” of sorts.

This time, the petals are of varying sizes which
are specified in the input to the function petal:

from turtle import *

color('black', 'magenta')

def left_turn(length):
    for i in range(10):
        forward(length/10)
        left(9)
        
def petal(size):
    begin_fill()
    left_turn(size)
    left(90)
    left_turn(size)
    left(90)
    end_fill()

# Loop through the "petal spiral" 
for i in range(0, 200, 10):
    petal(i) # Petal takes an input for size
    right(360/10)
    
bye()
grote bloemen met keine erachter.
In this drawing, the large petals hide the smallest ones.
We would like the smallest petals to be in front.
----
How can we change the program to draw the smallest petals in front of the larger ones?

from turtle import *

color('black', 'magenta')

def left_turn(length):
    for i in range(10):
        forward(length/10)
        left(9)
        
def petal(size):
    begin_fill()
    left_turn(size)
    left(90)
    left_turn(size)
    left(90)
    end_fill()

for i in range(0, 200, 10):
    petal(i)                       #line19
    right(360/10)
    
bye()
It's important to notice that the value i determines the size of the petal that's drawn on line 19.

Explanation
It's important to notice that the value i determines the size of the petal that's drawn on line 19.
In order to draw the larger petals first, we want the biggest values for i first. 
To do this, we can reverse the values in the range function.

So, in this case, range(200, 0, -10) draws the largest petals first and the smaller ones later,
putting the smaller ones on top of the larger ones.

In order to draw the larger petals first, we want the biggest values for i first.
To do this, we can reverse the values in the range function and use a negative step size:

from turtle import *

color('black', 'magenta')

def left_turn(length):
    for i in range(10):
        forward(length/10)
        left(9)
        
def petal(size):
    begin_fill()
    left_turn(size)
    left(90)
    left_turn(size)
    left(90)
    end_fill()

for i in range(200, 0, -10): # Line changed
    petal(i)
    right(360/10)
    
bye()

